//
//  ViewController.swift
//  HitMe
//
//  Created by diagnosefiz on 10.08.17.
//  Copyright ¬© 2017 diagnosefiz. All rights reserved.
//

import UIKit
import QuartzCore

class ViewController: UIViewController
{
    var currentValue: Int = 0
    var targetValue: Int = 0
    var score = 0
    var round = 0

    @IBOutlet weak var slider: UISlider!
    @IBOutlet weak var targetLabel: UILabel!
    @IBOutlet weak var scoreLabel: UILabel!
    @IBOutlet weak var roundLabel: UILabel!

    @IBAction func startOver(_ sender: UIButton) {
        startNewGame()
        updateLabels()
        let transition = CATransition()
        transition.type = kCATransitionFade
        transition.duration = 1
        transition.timingFunction = CAMediaTimingFunction(name: kCAMediaTimingFunctionEaseOut)
        view.layer.add(transition, forKey: nil)
    }
    @IBAction func showAlert()
    {
        /* 
            —É—Å—Ç–∞–Ω–æ–≤–∏–º –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ—á–∫–æ–≤
        */
        let difference = abs(currentValue - targetValue) //–±–µ–∑ —É—á–µ—Ç–∞ –∑–Ω–∞–∫–∞
                                                         //(—á–∏—Å–ª–æ –≤—Å–µ–≥–¥–∞ –ø–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω–æ–µ)
        var points = 100 - difference
        /*
            –¥–æ–±–∞–≤–ª—è–µ—Ç –æ—á–∫–∏
            –∫ –æ–±—â–µ–º—É —Å—á–µ—Ç—É
        */
        
//        if difference < 0
//        {
//            difference = -difference
//        }
        let title: String
        if difference == 0
        {
            title = "–û–≥–æ–Ω–∏—â–µ!"
            points += 100
        } else if difference < 5
        {
            title = "–ù—É –ø–æ—á—Ç–∏"
            if difference == 1 {
            points += 50
            }
        } else if difference < 10
        {
            title = "–ù–µ–ø–ª–æ—Ö–æ"
        } else
        {
            title = "üí©"
        }
        score += points
        /*
            –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –±–∞–ª–ª, –∫–æ—Ç–æ—Ä—ã–π –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å, 
            —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç 100 –æ—á–∫–æ–≤, –µ—Å–ª–∏ –≤—ã –ø–æ–º–µ—Å—Ç–∏—Ç–µ —Å–ª–∞–π–¥–µ—Ä –ø—Ä—è–º–æ –Ω–∞ —Ü–µ–ª—å, 
            –∞ —Ä–∞–∑–Ω–∏—Ü–∞ —Ä–∞–≤–Ω–∞ –Ω—É–ª—é. –ß–µ–º –¥–∞–ª—å—à–µ –æ—Ç —Ü–µ–ª–∏, 
            —Ç–µ–º –º–µ–Ω—å—à–µ –æ—á–∫–æ–≤ –≤—ã –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç–µ.
        */
        let message = "You scored \(points) points"
        let alert = UIAlertController(title: title, message: message, preferredStyle: .alert)
        //—Å–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É
        //–≤ handler (–æ–±—Ä–∞–±–æ—Ç—á–∏–∫) –ø–µ—Ä–µ–¥–∞–µ–º —Å–æ–±—ã—Ç–∏—è startNewRound() –∏ updateLabels()
        let action = UIAlertAction(title: "OK", style: .default, handler: {action in
                                                                        self.startNewRound()
                                                                        self.updateLabels()
        })
        alert.addAction(action)
        present(alert, animated: true, completion: nil)
    }
    @IBAction func sliderMoved(_ slider: UISlider)
    {
        /*
            –§—É–Ω–∫—Ü–∏—è lroundf (),
            —á—Ç–æ–±—ã –æ–∫—Ä—É–≥–ª–∏—Ç—å –¥–µ—Å—è—Ç–∏—á–Ω–æ–µ 
            —á–∏—Å–ª–æ –¥–æ –±–ª–∏–∂–∞–π—à–µ–≥–æ —Ü–µ–ª–æ–≥–æ —á–∏—Å–ª–∞
        */
        currentValue = lroundf(slider.value)
    }
    
    func startNewRound()
    {
        round += 1
        /*
            —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º —Ä–∞–Ω–¥–æ–º–Ω–æ–µ —á–∏—Å–ª–æ 
            –æ—Ç 1 –¥–æ 100
            Int(arc4random_uniform(100)
            –≤–æ–∑–≤—Ä–∞—Ç–∏—Ç –æ—Ç 1 –¥–æ 99
            –¥–µ–ª–∞–µ–º +1
        */
        targetValue = 1 + Int(arc4random_uniform(100))
        currentValue = 50
        slider.value = Float(currentValue)
        
    }
    func startNewGame()
    {
        score = 0
        round = 0
        startNewRound()
    }
    func updateLabels()
    {
        targetLabel.text = String(targetValue)
        scoreLabel.text = String(score)
        roundLabel.text = String(round)
    }

    override func viewDidLoad() {
        super.viewDidLoad()
        startNewGame()
        updateLabels()
        let thumbImageNormal = #imageLiteral(resourceName: "SliderThumb-Normal")
        slider.setThumbImage(thumbImageNormal, for: .normal)
        
        let thumbImageHighlighted = UIImage(named:  "SliderThumb-Highlighted")!
        slider.setThumbImage(thumbImageHighlighted, for: .highlighted)
        
        let insets = UIEdgeInsets(top: 0, left: 14, bottom: 0, right: 14)
        
        let trackLeftImage = #imageLiteral(resourceName: "SliderTrackLeft")
        let trackLeftResizable = trackLeftImage.resizableImage(withCapInsets: insets)
        slider.setMinimumTrackImage(trackLeftResizable, for: .normal)
        
        let trackRightImage = #imageLiteral(resourceName: "SliderTrackRight")
        let trackRightResizable = trackRightImage.resizableImage(withCapInsets: insets)
        slider.setMaximumTrackImage(trackRightResizable, for: .normal)
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }


}

